import db from "../config/db.js";


const createTables = async () => {
  const tabelas = [
    `CREATE TABLE IF NOT EXISTS status(
      ID INT AUTO_INCREMENT PRIMARY KEY,
      DESCRICAO VARCHAR(255) NOT NULL UNIQUE
    )`,
    `CREATE TABLE IF NOT EXISTS log_alarmes(
      ID INT AUTO_INCREMENT PRIMARY KEY,
      STATUS VARCHAR(90) NOT NULL,
      FOREIGN KEY (STATUS) REFERENCES status(DESCRICAO) ON DELETE CASCADE
    )`,
    `CREATE TABLE IF NOT EXISTS log_producao(
      ID INT AUTO_INCREMENT PRIMARY KEY,
      STATUS VARCHAR(90) NOT NULL,
      FOREIGN KEY (STATUS) REFERENCES status(DESCRICAO) ON DELETE CASCADE
    )`,
    `CREATE TABLE IF NOT EXISTS medidas(
      ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
      NOME VARCHAR(90) NOT NULL,
      STATUS VARCHAR(90) NOT NULL,
      FOREIGN KEY (STATUS) REFERENCES status(DESCRICAO) ON DELETE CASCADE
    )`,
    `CREATE TABLE IF NOT EXISTS funcoes(
      ID INT AUTO_INCREMENT PRIMARY KEY,
      NOME VARCHAR(255) NOT NULL UNIQUE,
      STATUS VARCHAR(90) NOT NULL,
      FOREIGN KEY (STATUS) REFERENCES status(DESCRICAO) ON DELETE CASCADE
    )`,
    `CREATE TABLE IF NOT EXISTS unidades(
      ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
      UNIDADE VARCHAR(255) NOT NULL UNIQUE,
      ABREVIACAO VARCHAR(10) NOT NULL,
      STATUS VARCHAR(90) NOT NULL,
      FOREIGN KEY (STATUS) REFERENCES status(DESCRICAO) ON DELETE CASCADE
    )`,
    `CREATE TABLE IF NOT EXISTS medidas_unidades(
      ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
      ID_UNIDADE INT NOT NULL,
      ID_MEDIDAS INT NOT NULL,
      FOREIGN KEY (ID_MEDIDAS) REFERENCES medidas(ID) ON DELETE CASCADE,
      FOREIGN KEY (ID_UNIDADE) REFERENCES unidades(ID) ON DELETE CASCADE
    )`,
    `CREATE TABLE IF NOT EXISTS parametros(
      ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT NOT NULL,
      PARAMETRO VARCHAR(255) NOT NULL,
      VALOR INTEGER NOT NULL,
      VL_MIN INTEGER NOT NULL,
      VL_MAX INTEGER NOT NULL,
      STATUS VARCHAR(90) NOT NULL,
      FOREIGN KEY (STATUS) REFERENCES status(DESCRICAO) ON DELETE CASCADE
    )`,
    `CREATE TABLE IF NOT EXISTS parametros_unidades(
      ID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
      ID_PARAMETROS INT NOT NULL,
      ID_UNIDADES INT NOT NULL,
      FOREIGN KEY (ID_PARAMETROS) REFERENCES parametros(ID) ON DELETE CASCADE,
      FOREIGN KEY (ID_UNIDADES) REFERENCES unidades(ID) ON DELETE CASCADE
    )`,
    `CREATE TABLE IF NOT EXISTS parametros_medidas(
      ID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
      ID_PARAMETROS INT NOT NULL,
      ID_MEDIDAS INT NOT NULL,
      FOREIGN KEY (ID_PARAMETROS) REFERENCES parametros(ID) ON DELETE CASCADE,
      FOREIGN KEY (ID_MEDIDAS) REFERENCES medidas(ID) ON DELETE CASCADE
    )`,
    `CREATE TABLE IF NOT EXISTS parametros_funcoes(
      ID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
      ID_PARAMETROS INT NOT NULL,
      ID_FUNCOES INT NOT NULL,
      FOREIGN KEY (ID_PARAMETROS) REFERENCES parametros(ID) ON DELETE CASCADE,
      FOREIGN KEY (ID_FUNCOES) REFERENCES funcoes(ID) ON DELETE CASCADE
    )`,
    `CREATE TABLE IF NOT EXISTS users(
      ID INT AUTO_INCREMENT PRIMARY KEY,
      LOGIN VARCHAR(255) NOT NULL,
      PASSWORD VARCHAR(255) NOT NULL,
      NIVEL INT NOT NULL,
      STATUS VARCHAR(90) NOT NULL,
      FOREIGN KEY (STATUS) REFERENCES status(DESCRICAO) ON DELETE CASCADE
    )`
  ];
  for (const query of tables) {
    try {
      await db.promise().query(query);
    } catch (err) {
      console.error("Erro ao criar tabelas:", err);
    }
  }

  console.log("Tabelas criadas.");
};

export default createTables;